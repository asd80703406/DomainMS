{% block http_upstream %}
{#{{ nginx_upstreams }}#}
{% for upstream in item.nginx_upstreams %}
upstream {{ upstream.name }} {
{% if upstream.strategy is defined and upstream.strategy != "rr" %}
    {{ upstream.strategy }};
{% endif %}
{% for server in upstream.servers %}
    server {{ server }};
{% endfor %}
{% if upstream.keepalive is defined and upstream.keepalive != None %}
    keepalive {{ upstream.keepalive }};
{% endif %}
}
{% endfor %}
{% endblock %}

server {
    listen 80;
    server_name {{ item.nginx_vhosts.server_name }};
    access_log /data0/logs/nginx/{{ item.nginx_vhosts.server_name }}.access.log main;
    error_log /data0/logs/nginx/{{ item.nginx_vhosts.server_name }}.error.log error;

    location / {
        proxy_pass_header Server;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Scheme $scheme;
        proxy_pass http://{{ item.nginx_vhosts.server_name }}_80;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
}
server {
    listen 443;
    server_name {{ item.nginx_vhosts.server_name }};
    ssl on;
    ssl_certificate         /usr/local/nginx/conf/ssl/{{ item.nginx_vhosts.ssl_name }}.pem;
    ssl_certificate_key     /usr/local/nginx/conf/ssl/{{ item.nginx_vhosts.ssl_name }}.pem;
    ssl_session_timeout     5m;
    ssl_prefer_server_ciphers On;
    ssl_protocols SSLv2 TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS;
    access_log /data0/logs/nginx/{{ item.nginx_vhosts.server_name }}.access.log main;
    error_log /data0/logs/nginx/{{ item.nginx_vhosts.server_name }}.error.log error;

    location / {
        proxy_pass_header Server;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Scheme $scheme;
        proxy_pass https://{{ item.nginx_vhosts.server_name }}_443;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
}